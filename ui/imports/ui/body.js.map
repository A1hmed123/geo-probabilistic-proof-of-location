{
  "version": 3,
  "file": "body.js",
  "sourceRoot": "",
  "sources": [
    "body.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA,SAAA,EAAA;;AAAA,OAAA;;AACA,OAAA;EAAS,IAAT;CAAA,MAAA;;AACA,OAAO,MAAP,MAAA;;AACA,SAAA,GAAY,OAAA,CAAQ,WAAR;;AAEZ,IAAA,GAAO,IAAI,IAAJ,CAAA;;AACP,IAAI,CAAC,IAAL,CAAU,4CAAV;;AAEA,QAAQ,CAAC,IAAI,CAAC,MAAd,CACE;EAAA,qBAAA,EAAuB,QAAA,CAAA,CAAA;AACrB,QAAA;IAAA,OAAA,GAAU,CAAA,CAAE,eAAF,CAAmB,CAAA,CAAA,CAAE,CAAC;WAChC,IAAI,CAAC,WAAL,CAAiB,OAAjB,CAAyB,CAAC,IAA1B,CACE,QAAA,CAAC,IAAD,CAAA;aACE,MAAM,CAAC,SAAP,CAAiB,IAAI,CAAC,QAAtB,CACA,CAAC,IADD,CACM,QAAA,CAAC,GAAD,CAAA;AACJ,YAAA;QAAA,CAAA,CAAE,cAAF,CAAiB,CAAC,IAAlB,CAAuB,KAAvB,EAA8B,GAA9B;QACA,OAAA,GAAU,IAAI,SAAS,CAAC,OAAd,CAAsB;UAAE,KAAA,EAAO,CAAA,CAAE,UAAF,CAAc,CAAA,CAAA;QAAvB,CAAtB;QACV,OAAO,CAAC,WAAR,CAAoB,MAApB,EAA2B,QAAA,CAAC,OAAD,CAAA;UACzB,OAAO,CAAC,GAAR,CAAY,OAAZ;UACA,OAAO,CAAC,IAAR,CAAA;iBACA,IAAI,CAAC,QAAL,CAAc,IAAI,CAAC,SAAnB,EAA8B,IAAI,CAAC,UAAnC,EAA+C,IAAI,CAAC,IAApD,EAA0D,IAAI,CAAC,SAA/D,EAA0E,IAAI,CAAC,QAA/E,EAAyF,OAAzF,CACA,CAAC,EADD,CACI,iBADJ,EAEE,QAAA,CAAC,GAAD,CAAA;mBACE,CAAA,CAAE,eAAF,CAAkB,CAAC,SAAnB,GAA+B;UADjC,CAFF;QAHyB,CAA3B;eASA,SAAS,CAAC,MAAM,CAAC,UAAjB,CAAA,CAA6B,CAAC,IAA9B,CAAmC,QAAA,CAAC,OAAD,CAAA;UACjC,IAAI,OAAO,CAAC,MAAR,GAAiB,CAArB;mBACE,OAAO,CAAC,KAAR,CAAc,OAAQ,CAAA,CAAA,CAAtB,EADF;WAAA,MAAA;mBAGE,OAAO,CAAC,KAAR,CAAc,mBAAd,EAHF;;QADiC,CAAnC,CAMC,CAAC,KANF,CAMQ,QAAA,CAAC,CAAD,CAAA;iBACN,OAAO,CAAC,KAAR,CAAc,CAAd;QADM,CANR;MAZI,CADN,CAuBA,CAAC,KAvBD,CAuBO,QAAA,CAAC,GAAD,CAAA;eACL,OAAO,CAAC,KAAR,CAAc,GAAd;MADK,CAvBP;IADF,CADF;EAFqB;AAAvB,CADF",
  "sourcesContent": [
    "import \"./body.html\"\r\nimport { PPoL } from \"../objects/ppol.js\"\r\nimport QRCode from \"qrcode\"\r\nInstascan = require \"instascan\"\r\n\r\nppol = new PPoL()\r\nppol.init(\"0xba91d77dd6da144ecbc4d5b3aa69f2d0c166f711\")\r\n\r\nTemplate.user.events(\r\n  \"click .gen_user_sig\": () ->\r\n    message = $(\"#user_message\")[0].value\r\n    ppol.signUserMsg(message).then(\r\n      (_sig) ->\r\n        QRCode.toDataURL(_sig._userSig)\r\n        .then((url) ->\r\n          $(\"#user_sig_qr\").attr(\"src\", url)\r\n          scanner = new Instascan.Scanner({ video: $('#preview')[0] });\r\n          scanner.addListener('scan',(content) ->\r\n            console.log content\r\n            scanner.stop()\r\n            ppol.logProof(_sig._blockNum, _sig._blockHash, _sig._uid, _sig._userAddr, _sig._userSig, content)\r\n            .on('transactionHash',\r\n              (_tx) ->\r\n                $(\"log_proof_out\").innerHTML = _tx\r\n            )\r\n          )\r\n          Instascan.Camera.getCameras().then((cameras) ->\r\n            if (cameras.length > 0)\r\n              scanner.start(cameras[0])\r\n            else\r\n              console.error('No cameras found.')\r\n\r\n          ).catch((e) ->\r\n            console.error(e)\r\n          )\r\n        )\r\n        .catch((err) ->\r\n          console.error(err)\r\n        )\r\n    )\r\n)"
  ]
}